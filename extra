view => where we can click button or call api
            ||
            \/
action => where API call happen it return type and payload
            ||
            \/
Reducer => where state managment happen
            ||
            \/
Store => where we save the updated state
            ||
            \/
View => will recive the updated state


///////
How to generate dummy api
///////////
npm i -g json-server
json-server --watch db.json --port 7090

npm i redux react-redux redux-logger prop-types

npm i apollo-boost graphql react-apollo 


npm i redux react-redux redux-promise react-slick redux-logger prop-types 
enzyme-adapter-react-16 react-addons-test-utils react-test-renderer react-router-dom

{
    "abc":[

    ]
}

npm i -g create-react-native-app
npm i -g expo-cli 
///////////////////////

create-react-native-app mymobi
cd mymobi
npm run web

function add(a,b){
    return a+b
}

function sub(a,b){
    return a-b
}

function cala(a,b,opt){
    var out
    if(opt == "Add"){
        out = a+b
    }
    else if(opt="Sub"){
        out= a-b
    }
    return out
}


https://github.com/Aakashdeveloper/July_node_eveng/blob/master/dashboard/test/api.test.js

/////build////
npm run build 

https://www.youtube.com/watch?v=i9g2Sg10DPk&t=153s

microfrontend


https://github.com/Aakashdeveloper/React-Isomorphic-App


MERN 
MOngo express React Node 

Docker (images)
Docker Sawrm
Ansible


docker build . -t edureactsep
docker run -p 8989:3000 edureactsep


nginx> reverse proxy , ssl 

cert.pem
cert.key 

nginx.conf

server{
    listen 8081;
    server_name aakashhande.me
    location / {
        root /var/www/react-app
        index index.html
    }
}


function looping(userinut){
    for(i=0;i<5;i++){
        console.log(i)
    }
}


function * looping(userinut){
    for(i=0;i<5;i++){
        yield i
    }
}
var data = looping(5)
data.next()
{value: 0, done: false}
data.next()
{value: 1, done: false}
data.next()
{value: 2, done: false}
data.next()
{value: 3, done: false}
data.next()
{value: 4, done: false}
data.next()
{value: undefined, done: true}




React 
React Hooks
Backend
Deployment

Redux
React graphql /Saga 
Testing

